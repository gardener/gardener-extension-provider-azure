// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardener-extension-provider-azure/pkg/azure/client (interfaces: Vmss)

// Package vmss is a generated GoMock package.
package vmss

import (
	context "context"
	reflect "reflect"

	compute "github.com/Azure/azure-sdk-for-go/services/compute/mgmt/2021-03-01/compute"
	gomock "github.com/golang/mock/gomock"
)

// MockVmss is a mock of Vmss interface.
type MockVmss struct {
	ctrl     *gomock.Controller
	recorder *MockVmssMockRecorder
}

// MockVmssMockRecorder is the mock recorder for MockVmss.
type MockVmssMockRecorder struct {
	mock *MockVmss
}

// NewMockVmss creates a new mock instance.
func NewMockVmss(ctrl *gomock.Controller) *MockVmss {
	mock := &MockVmss{ctrl: ctrl}
	mock.recorder = &MockVmssMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVmss) EXPECT() *MockVmssMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockVmss) Create(arg0 context.Context, arg1, arg2 string, arg3 *compute.VirtualMachineScaleSet) (*compute.VirtualMachineScaleSet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*compute.VirtualMachineScaleSet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockVmssMockRecorder) Create(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockVmss)(nil).Create), arg0, arg1, arg2, arg3)
}

// Delete mocks base method.
func (m *MockVmss) Delete(arg0 context.Context, arg1, arg2 string, arg3 *bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockVmssMockRecorder) Delete(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockVmss)(nil).Delete), arg0, arg1, arg2, arg3)
}

// Get mocks base method.
func (m *MockVmss) Get(arg0 context.Context, arg1, arg2 string, arg3 compute.ExpandTypesForGetVMScaleSets) (*compute.VirtualMachineScaleSet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*compute.VirtualMachineScaleSet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockVmssMockRecorder) Get(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockVmss)(nil).Get), arg0, arg1, arg2, arg3)
}

// List mocks base method.
func (m *MockVmss) List(arg0 context.Context, arg1 string) ([]compute.VirtualMachineScaleSet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].([]compute.VirtualMachineScaleSet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockVmssMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockVmss)(nil).List), arg0, arg1)
}

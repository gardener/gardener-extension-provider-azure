apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: cloud-node-manager
  name: cloud-node-manager
  namespace: {{ .Release.Namespace }}
automountServiceAccountToken: false
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cloud-node-manager
  labels:
    k8s-app: cloud-node-manager
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["watch","list","get","update", "patch"]
- apiGroups: [""]
  resources: ["nodes/status"]
  verbs: ["patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cloud-node-manager
  labels:
    k8s-app: cloud-node-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloud-node-manager
subjects:
- kind: ServiceAccount
  name: cloud-node-manager
  namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cloud-node-manager
  namespace: {{ .Release.Namespace }}
  labels:
    node.gardener.cloud/critical-component: "true"
    component: cloud-node-manager
spec:
  selector:
    matchLabels:
      k8s-app: cloud-node-manager
  template:
    metadata:
      labels:
        node.gardener.cloud/critical-component: "true"
        k8s-app: cloud-node-manager
      annotations:
        cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: cloud-node-manager
      hostNetwork: true   # required to fetch correct hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: node-role.kubernetes.io/master
        operator: Equal
        value: "true"
        effect: NoSchedule
      - operator: "Exists"
        effect: NoExecute
      - operator: "Exists"
        effect: NoSchedule
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: cloud-node-manager
        image: {{ index .Values.images "cloud-node-manager" }}
        imagePullPolicy: IfNotPresent
        command:
        - cloud-node-manager
        - --node-name=$(NODE_NAME)
        - --wait-routes=true   # only set to true when --configure-cloud-routes=true in cloud-controller-manager.
        {{- if semverCompare ">= 1.26.0-0, < 1.30.0-0" .Capabilities.KubeVersion.Version }}
        - --enable-deprecated-beta-topology-labels=true
        {{- end }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            cpu: 200m

{{- if .Values.global.vpaEnabled }}
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: cloud-node-manager
  namespace: {{ .Release.Namespace }}
spec:
  resourcePolicy:
    containerPolicies:
    - containerName: cloud-node-manager
      controlledValues: RequestsOnly
  targetRef:
    apiVersion: apps/v1
    kind: DaemonSet
    name: cloud-node-manager
  updatePolicy:
    updateMode: "Auto"
{{- end }}

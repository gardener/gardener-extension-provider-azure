{{- range $index, $machineClass := .Values.machineClasses }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $machineClass.name }}
  namespace: {{ $.Release.Namespace }}
{{- if $machineClass.labels }}
  labels:
{{ toYaml $machineClass.labels | indent 4 }}
{{- end }}
type: Opaque
data:
  userData: {{ $machineClass.secret.cloudConfig | b64enc }}
---
apiVersion: machine.sapcloud.io/v1alpha1
kind: MachineClass
metadata:
  name: {{ $machineClass.name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- if $machineClass.operatingSystem }}
{{ toYaml $machineClass.operatingSystem | indent 4 }}
    {{- end }}
    {{- if $machineClass.labels }}
{{ toYaml $machineClass.labels | indent 4 }}
    {{- end }}
{{- if $machineClass.nodeTemplate }}
nodeTemplate:
  architecture: {{ $machineClass.nodeTemplate.architecture }}
  capacity:
{{ toYaml $machineClass.nodeTemplate.capacity | indent 4 }}
  instanceType: {{ $machineClass.nodeTemplate.instanceType }}
  region: {{ $machineClass.nodeTemplate.region }}
  zone: {{ $machineClass.nodeTemplate.zone }}
{{- end }}
providerSpec:
  {{- if hasKey $machineClass "cloudConfiguration" }}
  cloudConfiguration:
{{ toYaml $machineClass.cloudConfiguration | indent 4 }}
  {{- end }}
  location: {{ $machineClass.region }}
  properties:
    {{- if $machineClass.securityProfile }}
    securityProfile:
      {{- if hasKey $machineClass.securityProfile "securityType" }}
      securityType: {{ $machineClass.securityProfile.securityType }}
      {{- end }}
      {{- if hasKey $machineClass.securityProfile "uefiSettings" }}
      uefiSettings:
{{ toYaml $machineClass.securityProfile.uefiSettings | indent 8 }}
      {{- end }}
    {{- end }}
    {{- if hasKey $machineClass "zone" }}
    zone: {{ $machineClass.zone }}
    {{- end }}
    {{- if hasKey $machineClass "machineSet" }}
    machineSet:
      id: {{ $machineClass.machineSet.id }}
      kind: {{ $machineClass.machineSet.kind }}
    {{- end }}
    {{- if hasKey $machineClass "identityID" }}
    identityID: {{ $machineClass.identityID }}
    {{- end }}
    {{- if hasKey $machineClass.network "acceleratedNetworking" }}
    networkProfile:
      acceleratedNetworking: {{ $machineClass.network.acceleratedNetworking }}
    {{- end }}
    {{- if hasKey $machineClass "diagnosticsProfile" }}
    diagnosticsProfile:
      enabled: {{ $machineClass.diagnosticsProfile.enabled }}
      {{- if hasKey $machineClass.diagnosticsProfile "storageURI" }}
      storageURI: {{ $machineClass.diagnosticsProfile.storageURI }}
      {{- end }}
    {{- end }}
    hardwareProfile:
      vmSize: {{ $machineClass.machineType }}
    osProfile:
      adminUsername: core
      linuxConfiguration:
        disablePasswordAuthentication: true
        ssh:
          publicKeys:
            path: /home/core/.ssh/authorized_keys
            keyData: {{ $machineClass.sshPublicKey }}
    storageProfile:
      imageReference:
{{- if $machineClass.image.id }}
        id: {{ $machineClass.image.id }}
{{- else if $machineClass.image.communityGalleryImageID }}
        communityGalleryImageID: {{ $machineClass.image.communityGalleryImageID }}
{{- else if $machineClass.image.sharedGalleryImageID }}
        sharedGalleryImageID: {{ $machineClass.image.sharedGalleryImageID }}
{{- else }}
        urn: {{ $machineClass.image.urn }}
        {{- if $machineClass.image.skipMarketplaceAgreement}}
        skipMarketPlaceAgreement: true
        {{- end }}
{{- end }}
      osDisk:
        caching: None
        diskSizeGB: {{ $machineClass.osDisk.size }}
        managedDisk:
        {{- if hasKey $machineClass.osDisk "type" }}
          storageAccountType: {{ $machineClass.osDisk.type }}
        {{- end }}
        {{- if hasKey $machineClass.osDisk "securityProfile" }}
          securityProfile:
            securityEncryptionType: {{ $machineClass.osDisk.securityProfile.securityEncryptionType }}
        {{- end }}
        createOption: FromImage
{{- if $machineClass.dataDisks }}
      dataDisks:
{{ toYaml $machineClass.dataDisks | indent 6 }}
{{- end }}
  resourceGroup: {{ $machineClass.resourceGroup }}
  subnetInfo:
    vnetName: {{ $machineClass.network.vnet }}
    {{- if hasKey $machineClass.network "vnetResourceGroup" }}
    vnetResourceGroup: {{ $machineClass.network.vnetResourceGroup}}
    {{- end }}
    subnetName: {{ $machineClass.network.subnet }}
{{- if $machineClass.tags }}
  tags:
{{ toYaml $machineClass.tags | indent 4 }}
{{- end }}
secretRef:
  name: {{ $machineClass.name }}
  namespace: {{ $.Release.Namespace }}
credentialsSecretRef:
  name: {{ $machineClass.credentialsSecretRef.name }}
  namespace: {{ $machineClass.credentialsSecretRef.namespace }}
provider: "Azure"
{{- end }}

{{- if not .Values.useLegacyProvisioner }}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: default
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
    resources.gardener.cloud/delete-on-invalid-update: "true"
provisioner: disk.csi.azure.com
parameters:
  skuName: StandardSSD_LRS
  kind: managed
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: managed-standard-hdd
  annotations:
    resources.gardener.cloud/delete-on-invalid-update: "true"
provisioner: disk.csi.azure.com
parameters:
  skuName: Standard_LRS
  kind: managed
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: managed-standard-ssd
  annotations:
    resources.gardener.cloud/delete-on-invalid-update: "true"
provisioner: disk.csi.azure.com
parameters:
  skuName: StandardSSD_LRS
  kind: managed
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: managed-premium-ssd
  annotations:
    resources.gardener.cloud/delete-on-invalid-update: "true"
provisioner: disk.csi.azure.com
parameters:
  skuName: Premium_LRS
  kind: managed
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: files
  annotations:
    resources.gardener.cloud/delete-on-invalid-update: "true"
provisioner: file.csi.azure.com
parameters:
  skuName: Standard_LRS
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
{{- end }}

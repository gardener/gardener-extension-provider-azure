{{- if .Values.useLegacyProvisioner }}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: default
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
    resources.gardener.cloud/delete-on-invalid-update: "true"
allowVolumeExpansion: true
provisioner: kubernetes.io/azure-disk
volumeBindingMode: WaitForFirstConsumer
parameters:
  storageaccounttype: Standard_LRS
  kind: managed

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: managed-standard-hdd
  annotations:
    resources.gardener.cloud/delete-on-invalid-update: "true"
allowVolumeExpansion: true
provisioner: kubernetes.io/azure-disk
volumeBindingMode: WaitForFirstConsumer
parameters:
  storageaccounttype: Standard_LRS
  kind: managed

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: managed-standard-ssd
  annotations:
    resources.gardener.cloud/delete-on-invalid-update: "true"
allowVolumeExpansion: true
provisioner: kubernetes.io/azure-disk
volumeBindingMode: WaitForFirstConsumer
parameters:
  storageaccounttype: StandardSSD_LRS
  kind: managed

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: managed-premium-ssd
  annotations:
    resources.gardener.cloud/delete-on-invalid-update: "true"
allowVolumeExpansion: true
provisioner: kubernetes.io/azure-disk
volumeBindingMode: WaitForFirstConsumer
parameters:
  storageaccounttype: Premium_LRS
  kind: managed

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: files
  annotations:
    resources.gardener.cloud/delete-on-invalid-update: "true"
allowVolumeExpansion: true
provisioner: kubernetes.io/azure-file
volumeBindingMode: WaitForFirstConsumer
parameters:
  skuName: Standard_LRS

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:azure-file-provisioner
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs:     ["create", "get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:azure-file-provisioner
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:azure-file-provisioner
subjects:
- kind: ServiceAccount
  name: persistent-volume-binder
  namespace: kube-system
{{- end }}
